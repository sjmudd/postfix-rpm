#!/bin/sh
#
# $Header: /home/sjmudd/tmp/cvsroot/postfix-rpm/buildpackage,v 2.24.6.1 2006/07/04 15:11:51 sjmudd Exp $
#
# Shell script used to build my packages
# - checks if the needed files exist and retrieve them
# - checks if the files have been changed against those stored in the CVS
#   repository
#
[ -n "$DEBUG" ] && set -x
myname=$(basename $0)

# Perform the package build
build () {
( cd ${srcdir} && \
  sh make-postfix.spec && \
  chmod u+w ${specdir}/postfix.spec && \
  cd ${specdir} && \
  sleep 2 && \
  echo "" && \
  echo "===> building RPM package (output to ${build_output})..." && \
  $RPM -ba $sign postfix.spec ) 2>&1 | tee ${build_output}
}

# Initialize.
# By now, shells must have functions. Ultrix users must use sh5 or lose.

umask 022
PATH=/bin:/usr/bin:/usr/sbin:/usr/etc:/sbin:/etc:/usr/contrib/bin:/usr/gnu/bin:/usr/ucb:/usr/bsd
SHELL=/bin/sh
IFS="
"
BACKUP_IFS="$IFS"
build_output=build-output
pkgdir=`pwd`
sign='--sign'
test_patches=0
 
USAGE="Usage: $myname [name=value] [option]
    --no-check              Do not check if the files have changed against the version stored in cvs.
    --no-sign               Do not sign the package.
    --test-patches          test the patches
                            postfix-test-patch-results
    name=value              Specify an installation parameter".
 
# Process command-line options and parameter settings. Work around
# brain damaged shells. "IFS=value command" should not make the
# IFS=value setting permanent. But some broken standard allows it.
 
for arg
do
    case $arg in
           *=*) IFS= eval $arg; IFS="$BACKUP_IFS";;
    --no-check) no_check=1;;
     --no-sign) sign=;;
--test-patches) test_patches=1;;
             *) echo $myname: Error: $USAGE 1>&2; exit 1;;
    esac
    shift
done

# check whether rpmbuild exists and complain if it doesn't
RPM=/usr/bin/rpmbuild

[ -x $RPM ] || {
    echo "$RPM not found, please install it with sudo yum install rpm-build"
    exit 1
}

srcdir=$(rpm --eval '%{_sourcedir}' | sed 's;%{name};postfix;')
specdir=$(rpm --eval '%{_specdir}' | sed 's;%{name};postfix;')

sh linkfiles --quiet --delete
sh linkfiles --create
build
echo ""
sh linkfiles --delete
