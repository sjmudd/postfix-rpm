#!/bin/sh
#
# postfix-get-distribution - script to determine the correct
# distribution, in the form <distribution>-<major>.<minor>
#
# - there appears to be no clear way of doing this which is cross platform
#   compatible between different rpm vendors
#
# With rh9/rhel3 the return value of rpm -q redhat-release does
# not include a minor version.  This is used in several places in
# make-postfix.spec so we generate a minor version of 0 if necessary.
#
# Recognised distributions so far are:
# - RedHat Linux
# - RedHat Enterprise Linux
# - Fedora
# - YellowDog Linux
# - Whitebox Linux (reports as RedHat Enterprise Linux for building)
# - CentOS Linux (reports as RedHat Enterprise Linux for building)
# - Mandrake Linux

[ -n "$DEBUG" ] && set -x
version=$(echo '$Revision: 1.12.4.1 $' | sed -e 's/^.*: //g' -e 's/ .*$//g')
myname=$(basename $0)

# Provide a usage message
usage () {

	cat <<-EOF
	$myname version $version

	Copyright (C) 2002-2005 - Simon J Mudd <sjmudd@pobox.com>
	This program may be freely redistributed under the terms of the GNU GPL

	Usage: $myname [--help] [--distribution] [--name] [--major] [--minor] [--full]

	Shows the distribution name or one of several different components:
	--distribution	<name>-<major>.<minor>		[default behaviour]
	--name		redhat, rhel, yellowdoy, ... (abbreviated format)
	--major		major version (3, 5, 6, 7, 8)
	--minor		minor version (0, ...) [ may have decimal values ]
	--full		Redhat-Release-X.Y, Whitebox-Release-X.Y, ...
	--debug		show all values
	EOF
}

# is the given rpm installed? - return exit code 0 if it is
# - for debugging we compare against ${debug_release}
check_release () {
	local release=$1

	if [ -n "${debug_release}" ]; then
		[ "${debug_release}" = "${release}" ]
	else
		rpm -q ${release} >/dev/null 2>&1
	fi
}

# get the full release version
# - for debugging we return ${debug_full_release}
get_release () {
	local release=$1

	if [ -n "${debug_full_release}" ]; then
		echo "${debug_full_release}"
	else
		rpm -q ${release}
	fi
}

info=distribution
if [ -n "$1" ]; then
    case $1 in
    --distribution)	info=distribution;;
    --name)		info=name;;
    --major)		info=major;;
    --minor)		info=minor;;
    --full)		info=full;;
    --debug)		info=debug;;
    --help)		usage; exit 0;;
    *)			usage; exit 1;;
    esac
fi

# default values
full="unknown-release-?.?"
name=unknown
release=0.0
major=0
minor=0
#
# Get release information (if possible)
#
if check_release redhat-release; then
    # We are using RHL <= 9 OR enterprise linux
    # redhat-release-3ES-1
    # redhat-release-3ES-7.2
    # redhat-release-2.9.5AS-7 (taroon beta)
    # redhat-release-9-3
    # redhat-release-8.0-8
    # redhat-release-7.2-1
    # redhat-release-6.2-1
    rpmname=redhat-release
    full=$(get_release ${rpmname})
    if [ -n "$(echo $full | egrep '(ES|ES|AS|WS)')" ];
    then
        name=rhel
    else
        name=redhat
    fi
    release=$(echo $full | \
	sed -e "s;^${rpmname}-;;" -e 's;-[0-9.]*$;;' -e 's;[EWA]S;;')
elif check_release whitebox-release; then
    # whitebox-release-3.0-6_i386
    # - whitebox SHOULD behave like rhel, so we name it the same
    rpmname=whitebox-release
    full=$(get_release ${rpmname})
    name=rhel
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;-[0-9.a-z_]*$;;')
elif check_release centos-release; then
    # CentOS SHOULD behave like rhel, so we name it the same
    rpmname=centos-release
    full=$(get_release ${rpmname})
    name=rhel
    release=$(rpm -q --queryformat='%{VERSION}' ${rpmname})
elif check_release fedora-release; then
    rpmname=fedora-release
    full=$(get_release ${rpmname})
    name=fedora
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;-[0-9.]*$;;')
elif check_release redhat-release-es; then
    rpmname=redhat-release-es
    full=$(get_release ${rpmname})
    name=rhel
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;[A-Z]*-[0-9.]*$;;')
elif check_release redhat-release-as; then
    rpmname=redhat-release-as
    full=$(get_release ${rpmname})
    name=rhel
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;[A-Z]*-[0-9.]*$;;')
elif check_release mandrake-release; then
    rpmname=mandrake-release
    full=$(get_release ${rpmname})
    name=mandrake
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;-[0-9.]*mdk$;;')
elif check_release yellowdog-release; then
    rpmname=yellowdog-release
    full=$(get_release ${rpmname})
    name=yellowdog
    release=$(echo $full | sed -e "s;^${rpmname}-;;" -e 's;-[0-9.]*$;;')
fi

# from release determine the major and minor versions
echo $release | grep -q '\.' && {
    # there's one or more '.'s in release (e.g. 8.0 OR 2.9.5)
    major=$(echo $release | sed -e 's;\.[0-9.]*$;;')
    minor=$(echo $release | sed -e 's;^[0-9]*\.;;')
} || {
    # there's no '.' in release (e.g. 9)
    major=$release
}

case $info in
distribution)
    echo ${name}-${major}.${minor};;
name)
    echo ${name};;
major)
    echo ${major};;
minor)
    echo ${minor};;
full)
    echo ${full};;
debug)
    echo name=$name
    echo release=$release
    echo major=$major
    echo minor=$minor
    echo full=$full
    ;;
*)
    echo "Internal error info=$info" >&2
    exit 1
esac
