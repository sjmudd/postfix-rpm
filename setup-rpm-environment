#!/bin/sh
#
# This script sets up the rpm environment I use to build my packages
# Namely:
# - rpmmacros copied to ~/.rpmmacros if it doesn't exist
# - git and rpm directory structure within $HOME based on the rpmmacros
#   installed previously

msg_debug () {
    [ -n "${DEBUG}" ] && echo "$*"
}
msg_info () {
    echo "$*"
}
msg_warn () {
    echo "warning: $*" >&2
}
msg_err () {
    echo "error: $*" >&2
    exit 1
}

myname=$(basename $0)
msg_debug "$myname: started"

[ $(id -u) = 0 ] && msg_err "This script is intented to be run as a non-root user"

# Create a location to put the local git repo.
# I use ~/git/postfix-rpm.git and then checkout the appropriate branch with
# $ git checkout POSTFIX_2_7.

msg_info "Checking git directory:"
dir=~/git
[ ! -d $dir ] && {
    mkdir $dir && msg_info "- $dir created [OK]" || \
	msg_warn "- $dir - could not be created [ERROR]"
} || msg_info "- $dir exists [OK]"

# check if ~/.rpmmacros exists, DON'T overwrite it.
msg_info "checking for file ~/.rpmmacros"
[ ! -e ~/.rpmmacros ] && {
    cp rpmmacros ~/.rpmmacros && \
	msg_info "- Installing default RPM Macros file..." || \
	msg_warn "- Could not copy rpmmacros to ~/.rpmmacros"
} || {
    msg_info "- RPM macros already installed in ~/.rpmmacros (not overwriting)"
    msg_info "- consider using file rpmmacros or comparing the 2 files"
}

msg_info "checking directories:"
for param in _topdir _sourcedir _specdir _tmppath _builddir \
	 _srcrpmdir _rpmdir; do
    dir=$(rpm --eval "%{$param}" | sed -e 's;%{name};postfix;')
    [ ! -d "$dir" ] && {
        mkdir -p $dir && msg_info "- $ created [OK]" || \
		msg_warn "- $dir - could not be created [ERROR]"
    } || msg_info "- $dir exists [OK]"
done
